#!/bin/bash

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# XXX: This and other C-\ aren't working correctly
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# XXX?
# bind-key -T copy-mode-vi C-\ select-pane -l
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Pane creation
unbind '"'
unbind %
unbind c
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Restoring clear screen
bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi

setw -g default-terminal "screen-256color"

# XXX: user login was a bit broken, maybe update profile to specify SHELL if
# chsh doesn't work?
set-option -g default-shell /usr/bin/zsh
# Mac OS: Enable pbcopy and pbpaste
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Plugins

# Note after adding new plugins below:
# - To install: <prefix> + I
# - To update: <prefix> + U
# - To uninstall: <prefix> + <alt> + u
# This ^ is a shortcut for removing plugins from ~/.tmux/plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Log pane data to $HOME/tmux-${session_name}-${window_index}-${pane_index}-%Y...log
# Keys:
# Toggle logging:       <prefix> + <shift> + p
# Capture visible text: <prefix> + <alt> + p
# Capture all history:  <prefix> + <alt> + <shift> + p
# Clear pane history:   <prefix> + <alt> + c
set -g @plugin 'tmux-plugins/tmux-logging'

# Save & Restore Tmux environment
# Keys:
# Save:    <prefix> + <ctrl> + s
# Restore: <prefix> + <ctrl> + r
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# Automatically save every 15 minutes
set -g @continuum-restore 'on'
# Restore vim sessions
# Leave off until setup obsession.vim plugin is setup
# set -g @resurrect-strategy-vim 'session'

# Ensure we use the correct directory
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$XDG_CONFIG_HOME/tmux/plugins"

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager
# NOTE: Keep this at the very bottom!!!
run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
